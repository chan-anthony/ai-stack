services:

# Ollama

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - OLLAMA_KEEP_ALIVE=24h
      - ENABLE_IMAGE_GENERATION=True
      - OLLAMA_ORIGINS=chrome-extension://*
      - COMFYUI_BASE_URL=http://stable-diffusion-webui:7860
      - CLI_ARGS=--use-pytorch-cross-attention
    networks:
      - ai-stack
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./ollama:/root/.ollama
    ports:
      - "11434:11434" # Add this line to expose the port
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

# open web ui

  open-webui:
    image: ghcr.io/open-webui/open-webui:latest
    container_name: open-webui
    restart: unless-stopped
    networks:
      - ai-stack
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - 'OLLAMA_BASE_URL=http://ollama:11434'
      - ENABLE_RAG_WEB_SEARCH=True
      - RAG_WEB_SEARCH_ENGINE=searxng
      - RAG_WEB_SEARCH_RESULT_COUNT=3
      - RAG_WEB_SEARCH_CONCURRENT_REQUESTS=10
      - SEARXNG_QUERY_URL=http://searxng:8081/search?q=<query>
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./open-webui:/app/backend/data
    depends_on:
      - ollama
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - "8080:8080" # Add this line to expose the port

  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    networks:
      - ai-stack
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./searxng:/etc/searxng
    depends_on:
      - ollama
      - open-webui
    restart: unless-stopped
    ports:
      - "8081:8080" # Add this line to expose the port

# n8n
  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    networks:
      - ai-stack
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
      - N8N_SECURE_COOKIE=FALSE
    volumes:
      - ./n8n:/home/node/.n8n
    restart: unless-stopped
    ports:
      - "5678:5678"

  comfyui:
    init: true
    container_name: comfyui
    networks:
      - ai-stack
    build:
      context: .
      dockerfile: Dockerfile
    image: "yanwk/comfyui-boot:cu129-slim"
    ports:
      - "8188:8188"
    volumes:
      - "./ComfyUI-Docker/storage:/root"
      - "./ComfyUI-Docker/storage-models/models:/root/ComfyUI/models"
      - "./ComfyUI-Docker/storage-models/hf-hub:/root/.cache/huggingface/hub"
      - "./ComfyUI-Docker/storage-models/torch-hub:/root/.cache/torch/hub"
      - "./ComfyUI-Docker/storage-user/input:/root/ComfyUI/input"
      - "./ComfyUI-Docker/storage-user/output:/root/ComfyUI/output"
      - "./ComfyUI-Docker/storage-user/workflows:/root/ComfyUI/user/default/workflows"
    environment:
      - CLI_ARGS=--use-pytorch-cross-attention
    security_opt:
      - "label=type:nvidia_container_t"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['0']
              capabilities: [gpu]

networks:
  ai-stack:
    external: true
